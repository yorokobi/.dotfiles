### Shred then wipe
function shwipe () {
    setopt sh_word_split
    for i in {1..$#}; do
        ARG=$@[$i]
        if [[ -e $ARG ]]; then ### shred & wipe only if the target exists
            if [[ ! -d $ARG ]]; then ### shred does not work on directories
                echo -n "Shredding ${ARG}... "
                /bin/shred -z $ARG
            fi
            echo "Wiping ${ARG}... "
            /usr/bin/wipe -rfs $ARG
        fi
    done
    unset sh_word_split
}

# Extract files from any archive
# # Usage: ex <archive_name>

function ex ()
{
    if [ -f "$1" ] ; then
        case "$1" in
            *.tar)                tar xvf $1    ;;
            *.tar.bz2 | *.tbz2 )  tar xjvf $1   ;;
            *.tar.gz | *.tgz )    tar xzvf $1   ;;
            *.bz2)                bunzip2 $1    ;;
            *.rar)                unrar x $1    ;;
            *.gz)                 gunzip $1     ;;
            *.zip)                unzip $1      ;;
            *.Z)                  uncompress $1 ;;
            *.7z)                 7z x $1       ;;
            *.xz)                 tar xJvf $1   ;;
            *)   echo ""${1}" cannot be extracted via extract()" ;;
        esac
    else
        echo ""${1}" is not a valid file"
    fi
}

### Put ./ on command line when tab is used without context
function my-complete-word() {
    if [[ -z $BUFFER ]]; then
        BUFFER='./'
        CURSOR=2
    fi
    zle complete-word
}
